//ExStart
//ExSummary: 这个代码展示了如何使用Aspose.Words创建一个表格的Word文档. 它构建了一个表格,有两个行,以及各种单元文本导向和格式.
//ExStepSummary:0: 下面的代码启动了新的文档和文档构建器.
//ExStepSummary:1: 下面的代码开始一个新的表格,并插入第一个单元列.
//ExStepSummary:2: 下面的代码为第二行及其单元配置格式.
//ExStepSummary:3: 下面的代码为第二行及其单元配置格式.
//ExStepSummary:4: 下面的代码结束表,并将文档存储在文件中.
//ExStepImage:1:images/1.png
//ExStepImage:2:images/2.png
//ExStepImage:3:images/3.png

//ExStep:0-
// 启动一个新的文档对象
Document doc = new Document();
DocumentBuilder builder = new DocumentBuilder(doc);

//ExStep:1-
// 开始一个新的桌子
Table table = builder.StartTable();
// 开始第一个细胞
builder.InsertCell();
// 设置第一个单元的垂直对齐
builder.CellFormat.VerticalAlignment = CellVerticalAlignment.Center; 
builder.Write("This is row 1 cell 1");
// 插入第二个单元
builder.InsertCell();
builder.Write("This is row 1 cell 2");
builder.EndRow();

//ExStep:2-
// 插入第二行的单元
builder.InsertCell();
// 配置第二行格式
builder.RowFormat.Height = 100;
builder.RowFormat.HeightRule = HeightRule.Exactly;
builder.CellFormat.Orientation = TextOrientation.Upward;
builder.Writeln("This is row 2 cell 1");
//ExStep:3-
// 插入第二行的第二个单元
builder.InsertCell();
builder.CellFormat.Orientation = TextOrientation.Downward; 
builder.Writeln("This is row 2 cell 2");
builder.EndRow();
builder.EndTable();

//ExStep:4-
// 自动调整固定列宽度的表
table.AutoFit(AutoFitBehavior.FixedColumnWidths);
// 保存文件到文件中
doc.Save("AddContentUsingDocumentBuilder.BuildTable.docx");
//ExEnd