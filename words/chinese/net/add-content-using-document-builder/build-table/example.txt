//ExStart
//ExSummary:本代码演示如何用 Aspose.Words 创建带有表格的单词文档。该代码将用两个行和各种单元格文本方向和格式构建一个表格。
//ExStepSummary:0: 以下代码初始化了一个新的文档和文档构建器 。
//ExStepSummary:1: 以下代码开始新表格并插入第一行单元格。
//ExStepSummary:2: 以下代码配置第二行及其单元格的格式。
//ExStepSummary:3: 以下代码配置第二行及其单元格的格式。
//ExStepSummary:4: 以下代码结束表格,并将文档保存到文件。
//ExStepImage:1:images/1.png
//ExStepImage:2:images/2.png
//ExStepImage:3:images/3.png

//ExStep:0-
// 初始化新的文档对象
Document doc = new Document();
DocumentBuilder builder = new DocumentBuilder(doc);

//ExStep:1-
// 开始新表格
Table table = builder.StartTable();
// 开始第一个单元格
builder.InsertCell();
// 设置第一个单元格的垂直对齐
builder.CellFormat.VerticalAlignment = CellVerticalAlignment.Center; 
builder.Write("This is row 1 cell 1");
// 插入第二个单元格
builder.InsertCell();
builder.Write("This is row 1 cell 2");
builder.EndRow();

//ExStep:2-
// 为第二行插入单元格
builder.InsertCell();
// 第二行的配置格式
builder.RowFormat.Height = 100;
builder.RowFormat.HeightRule = HeightRule.Exactly;
builder.CellFormat.Orientation = TextOrientation.Upward;
builder.Writeln("This is row 2 cell 1");
//ExStep:3-
// 插入第二行第二单元格
builder.InsertCell();
builder.CellFormat.Orientation = TextOrientation.Downward; 
builder.Writeln("This is row 2 cell 2");
builder.EndRow();
builder.EndTable();

//ExStep:4-
// 用固定列宽度自动调整表格
table.AutoFit(AutoFitBehavior.FixedColumnWidths);
// 将文档保存到文件
doc.Save("AddContentUsingDocumentBuilder.BuildTable.docx");
//ExEnd