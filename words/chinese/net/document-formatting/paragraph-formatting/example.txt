//ExStart
//ExSummary: 这代码显示如何使用Aspose.Words来格式化Word文档中的段落. 它显示如何设置段落格式化选项,如对齐,插入和段落后的空间.
//ExStepSummary:0: 这个步骤将启动一个新的文档和一个文档构建器.
//ExStepSummary:1: 列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列表中,列
//ExStepSummary:2: 文件的格式选择,以编写一个格式化的段落.
//ExStepSummary:3: 通过此步骤,写出另一个格式段落,说明段落之后空间的效果.
//ExStepImage:1:images/1.png
//ExStepImage:2:images/2.png
//ExStepImage:3:images/3.png
//ExStep:0- 
// 创建一个新的文档实例.
Document doc = new Document();
DocumentBuilder builder = new DocumentBuilder(doc);

//ExStep:1- 
// 设置段落格式选项.
ParagraphFormat paragraphFormat = builder.ParagraphFormat;
paragraphFormat.Alignment = ParagraphAlignment.Center;
paragraphFormat.LeftIndent = 50;
paragraphFormat.RightIndent = 50;
paragraphFormat.SpaceAfter = 25;

//ExStep:2- 
// 写下第一个格式段落.
builder.Writeln(
	"I'm a very nice formatted paragraph. I'm intended to demonstrate how the left and right indents affect word wrapping.");

//ExStep:3- 
// 写下第二段格式.
builder.Writeln(
	"I'm another nice formatted paragraph. I'm intended to demonstrate how the space after paragraph looks like.");

//ExStep:4- 
// 保存文件到指定的路径.
doc.Save(ArtifactsDir + "DocumentFormatting.ParagraphFormatting.docx");
//ExEnd