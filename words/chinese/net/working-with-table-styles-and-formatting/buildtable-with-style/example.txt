//ExStart
//ExSummary: 本代码展示了如何使用Aspose.Words创建一个 Word 文档,使用一个风格表.
//ExStepSummary:0: 启动一个新的文档和文档构建器来管理文档结构.
//ExStepSummary:1: 使用文件构造器启动文件中的新表.
//ExStepSummary:2: 输入第一个单元,设置表格式标识符.
//ExStepSummary:3: 应用格式选项到表,并设置自动匹配行为.
//ExStepSummary:4: 加入标题行单元.
//ExStepSummary:5: 输入数据行,包含项目名称和数量.
//ExStepSummary:6: 保存组装的文件到一个文件中.
//ExStepImage:2:images/1.png
//ExStepImage:3:images/2.png
//ExStepImage:4:images/3.png
//ExStepImage:5:images/4.png
//ExStep:0-
// 创建一个新的文档对象.
Document doc = new Document();
// 创建一个构建器,以促进文件生成.
DocumentBuilder builder = new DocumentBuilder(doc);

//ExStep:1-
// 在文件中开始一个新的表.
Table table = builder.StartTable();

//ExStep:2-
// 在设置格式化之前插入第一个单元.
builder.InsertCell();
// 设置表的样式标识符.
table.StyleIdentifier = StyleIdentifier.MediumShading1Accent1;


//ExStep:3-
// 设置风格选项.
table.StyleOptions = 
    TableStyleOptions.FirstColumn | TableStyleOptions.RowBands | TableStyleOptions.FirstRow;
// 设置桌子的自动适应行为.	
table.AutoFit(AutoFitBehavior.AutoFitToContents);


//ExStep:4-
// 写第一列的标题.
builder.Writeln("Item");
// 设置对入细胞.
builder.CellFormat.RightPadding = 40;
// 输入第二个单元.
builder.InsertCell();
// 写第二列的标题.
builder.Writeln("Quantity (kg)");
// 结束排列创建.
builder.EndRow();

//ExStep:5-
// 开始一个新的行,然后插入第一个细胞.
builder.InsertCell();
builder.Writeln("Apples");
builder.InsertCell();
builder.Writeln("20");
builder.EndRow();
 // 输入第二个项的新行的第一个单元.
builder.InsertCell();
builder.Writeln("Bananas");
builder.InsertCell();
builder.Writeln("40");
builder.EndRow();
// 开始第三个项目.
builder.InsertCell();
builder.Writeln("Carrots");
builder.InsertCell(); 
builder.Writeln("50");
builder.EndRow();

//ExStep:6-
// 保存文件到指定文件中.
doc.Save("WorkingWithTableStylesAndFormatting.BuildTableWithStyle.docx");
//ExEnd